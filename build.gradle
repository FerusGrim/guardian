plugins {
    id 'java'
    id 'maven'
    id 'idea'
    id 'eclipse'
    id 'signing'
    id 'com.github.hierynomus.license' version '0.13.1'
    id 'ninja.miserable.blossom' version '1.0.1'
    id 'com.github.johnrengelman.shadow' version '1.2.4'
    id 'org.spongepowered.plugin' version '0.8.1'
}

defaultTasks 'licenseFormat', 'build'

group = pluginGroup
version = "${spongeVersion}-${pluginVersion}-${pluginPatch}"

sourceCompatibility = 1.8
targetCompatibility = 1.8

sponge.plugin.id = pluginId

repositories {
    mavenCentral()
    maven { url 'https://dl.bintray.com/me4502/maven' }
    maven { url 'https://jitpack.io' }
}

dependencies {
    compile 'org.apache.commons:commons-math3:3.6.1'
    compile 'org.spongepowered:spongeapi:6.0.0-SNAPSHOT'
    compile 'com.zaxxer:HikariCP:2.6.0'
    compile 'com.me4502:ModularFramework:1.8.3'
    compile 'com.github.Me4502:Precogs:-SNAPSHOT'
}

blossom {
    def location = 'src/main/java/io/github/connorhartley/guardian/GuardianInfo.java'

    replaceToken '@id@', project.pluginId, location
    replaceToken '@name@', project.pluginName, location
    replaceToken '@version@', version, location
    replaceToken '@description@', project.pluginDescription, location
}

if (JavaVersion.current().isJava8Compatible()) {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

signing {
    required false
    sign configurations.archives
}

license {
    header = file('LICENSE')
    include '**/*.java'

    ignoreFailures = false
    strictCheck = true

    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

task sourceJar(type: Jar) {
    classifier = 'source'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

jar {
    classifier = 'dev'
}

shadowJar {
    classifier = ''
    dependencies {
        include(dependency('org.apache.commons:commons-math3:3.6.1'))
        include(dependency('com.zaxxer:HikariCP:2.6.0'))
        relocate ('com.me4502.modularframework', 'io.github.connorhartley.guardian.util.modularframework') {
            include dependency('com.me4502:ModularFramework')
            exclude 'com.me4502.modularframework.ModularFramework'
        }
    }
    exclude 'GradleStart**'
    exclude '.cache'
    exclude 'LICENSE'
    exclude 'com/me4502/modularframework/ModularFramework.class'
}

artifacts {
    archives shadowJar
    archives sourceJar
    archives javadocJar
    archives jar
}

build.dependsOn(shadowJar)
build.dependsOn(sourceJar)
build.dependsOn(javadocJar)
build.dependsOn(jar)